name: ci-helm
permissions:
  packages: write
  contents: read
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/dependabot.yml'
      - '.github/workflows/ci-oras.yaml'
  pull_request:
env:
  CHART_NAME: my-chart
  IMAGE_TAG: 0.1.0
jobs:
  tests:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.0.2
      - name: helm lint
        run: |
          helm lint $CHART_NAME
      - name: helm template
        run: |
          mkdir hydrated-manifests
          helm template $CHART_NAME --output-dir hydrated-manifests
      - uses: google-github-actions/setup-gcloud@v0.5.0
      - name: install kpt and nomos	
        run: |
          gcloud components install kpt nomos --quiet
      - name: vet	
        run: |
          nomos vet --path hydrated-manifests/$CHART_NAME/templates --no-api-server-check --source-format unstructured
      - name: kubeval
        if: ${{ always() }}
        run: |
          kpt fn eval hydrated-manifests/$CHART_NAME/templates --image gcr.io/kpt-fn/kubeval:v0.3 -- strict=true ignore_missing_schemas=true
      - name: gatekeeper
        if: ${{ always() }}
        run: |
          cp policies/* hydrated-manifests/$CHART_NAME/templates
          kpt fn eval hydrated-manifests/$CHART_NAME/templates --results-dir tmp --image gcr.io/kpt-fn/gatekeeper:v0.2
      - name: write gatkeeper errors in summary
        if: ${{ failure() }}
        run: |
          echo "üö´ gatekeeper errors:" >> $GITHUB_STEP_SUMMARY
          cat tmp/results.yaml | yq -r '.items[]?.results' -o json | jq -r '.[]? | "‚ùå \(.message)"' | sed 's/<//g;s/>//g' >> $GITHUB_STEP_SUMMARY
      - name: trivy scan
        if: ${{ always() }}
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          image-ref: $CHART_NAME
          exit-code: 1
          format: json
          severity: 'CRITICAL,HIGH,MEDIUM'
          output: trivy-errors.json
      - name: write trivy errors in summary
        if: ${{ failure() }}
        run: |
          echo "üö´ trivy errors:" >> $GITHUB_STEP_SUMMARY
          cat trivy-errors.json | jq -r '.Results[]? | "‚ùå \(.Misconfigurations[]?.Message)"' >> $GITHUB_STEP_SUMMARY
      - uses: engineerd/setup-kind@v0.5.0
        if: ${{ always() }}
      - name: helm install
        if: ${{ always() }}
        run: |
          kubectl create ns $CHART_NAME
          helm install $CHART_NAME -n $CHART_NAME
          kubectl wait --for=condition=available --timeout=1000s deployment/$CHART_NAME
  package:
    needs: tests
    runs-on: ubuntu-22.04
    steps:
      - name: helm package
        run: |
          helm package $CHART_NAME --version $IMAGE_TAG
      - name: helm login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u $ --password-stdin
      - name: helm push
        if: ${{ github.event_name == 'push' }}
        run: |
          helm push $CHART_NAME-$IMAGE_TAG.tgz oci://ghcr.io/${{ github.repository_owner }}
